{"ast":null,"code":"var _jsxFileName = \"/home/project/med_app/src/Components/ProfileForm/ProfileForm.js\",\n  _s = $RefreshSig$();\n// Import necessary modules from React and other files\nimport React, { useEffect, useState } from \"react\";\nimport { API_URL } from \"../../config\";\nimport { useNavigate } from \"react-router-dom\";\n\n// Define a Function component called ProfileForm\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ProfileForm = () => {\n  _s();\n  // Set up state variables using the useState hook\n  const [userDetails, setUserDetails] = useState({\n    name: '',\n    phone: '',\n    email: ''\n  });\n  const [updatedDetails, setUpdatedDetails] = useState({\n    name: '',\n    phone: '',\n    email: ''\n  });\n  const [editMode, setEditMode] = useState(false);\n\n  // Access the navigation functionality from React Router\n  const navigate = useNavigate();\n\n  // Use the useEffect hook to fetch user profile data when the component mounts or updates\n  useEffect(() => {\n    const authtoken = sessionStorage.getItem(\"auth-token\");\n    if (!authtoken) {\n      navigate(\"/login\");\n    } else {\n      fetchUserProfile();\n    }\n  }, [navigate]);\n\n  // Function to fetch user profile data from the API\n  const fetchUserProfile = async () => {\n    try {\n      const authtoken = sessionStorage.getItem(\"auth-token\");\n      const email = sessionStorage.getItem(\"email\");\n      if (!authtoken) {\n        navigate(\"/login\");\n      } else {\n        const response = await fetch(`${API_URL}/api/auth/user`, {\n          headers: {\n            \"Authorization\": `Bearer ${authtoken}`,\n            \"Email\": email\n          }\n        });\n        if (response.ok) {\n          const user = await response.json();\n          setUserDetails(user);\n          setUpdatedDetails(user);\n        } else {\n          throw new Error(\"Failed to fetch user profile\");\n        }\n      }\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  // Function to enable edit mode for profile details\n  const handleEdit = () => {\n    setEditMode(true);\n  };\n\n  // Function to update state when user inputs new data\n  const handleInputChange = e => {\n    setUpdatedDetails({\n      ...updatedDetails,\n      [e.target.name]: e.target.value\n    });\n  };\n\n  // Function to handle form submission when user saves changes\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      const authtoken = sessionStorage.getItem(\"auth-token\");\n      const email = sessionStorage.getItem(\"email\");\n      if (!authtoken || !email) {\n        navigate(\"/login\");\n        return;\n      }\n      const payload = {\n        ...updatedDetails\n      };\n      const response = await fetch(`${API_URL}/api/auth/user`, {\n        method: \"PUT\",\n        headers: {\n          \"Authorization\": `Bearer ${authtoken}`,\n          \"Content-Type\": \"application/json\",\n          \"Email\": email\n        },\n        body: JSON.stringify(payload)\n      });\n      if (response.ok) {\n        sessionStorage.setItem(\"name\", updatedDetails.name);\n        sessionStorage.setItem(\"phone\", updatedDetails.phone);\n        setUserDetails(updatedDetails);\n        setEditMode(false);\n        alert(`Profile Updated Successfully!`);\n        navigate(\"/\");\n      } else {\n        throw new Error(\"Failed to update profile\");\n      }\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  // Render the profile form with different sections based on edit mode\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"profile-container\",\n    children: editMode ? /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Email\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          name: \"email\",\n          value: updatedDetails.email,\n          disabled: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Name\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"name\",\n          value: updatedDetails.name,\n          onChange: handleInputChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Phone\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"phone\",\n          value: updatedDetails.phone,\n          onChange: handleInputChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Save\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"profile-details\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: [\"Welcome, \", userDetails.name]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"b\", {\n          children: \"Email:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 14\n        }, this), \" \", userDetails.email]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"b\", {\n          children: \"Phone:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 14\n        }, this), \" \", userDetails.phone]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleEdit,\n        children: \"Edit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 117,\n    columnNumber: 5\n  }, this);\n};\n\n// Export the ProfileForm component as the default export\n_s(ProfileForm, \"A8atsGUqRreqf2Ws+iAjtZuDWhE=\", false, function () {\n  return [useNavigate];\n});\n_c = ProfileForm;\nexport default ProfileForm;\nvar _c;\n$RefreshReg$(_c, \"ProfileForm\");","map":{"version":3,"names":["React","useEffect","useState","API_URL","useNavigate","jsxDEV","_jsxDEV","ProfileForm","_s","userDetails","setUserDetails","name","phone","email","updatedDetails","setUpdatedDetails","editMode","setEditMode","navigate","authtoken","sessionStorage","getItem","fetchUserProfile","response","fetch","headers","ok","user","json","Error","error","console","handleEdit","handleInputChange","e","target","value","handleSubmit","preventDefault","payload","method","body","JSON","stringify","setItem","alert","className","children","onSubmit","type","disabled","fileName","_jsxFileName","lineNumber","columnNumber","onChange","onClick","_c","$RefreshReg$"],"sources":["/home/project/med_app/src/Components/ProfileForm/ProfileForm.js"],"sourcesContent":["// Import necessary modules from React and other files\nimport React, { useEffect, useState } from \"react\";\nimport { API_URL } from \"../../config\";\nimport { useNavigate } from \"react-router-dom\";\n\n// Define a Function component called ProfileForm\nconst ProfileForm = () => {\n  // Set up state variables using the useState hook\n  const [userDetails, setUserDetails] = useState({\n    name: '',\n    phone: '',\n    email: ''\n  });\n  const [updatedDetails, setUpdatedDetails] = useState({\n    name: '',\n    phone: '',\n    email: ''\n  });\n  const [editMode, setEditMode] = useState(false);\n  \n  // Access the navigation functionality from React Router\n  const navigate = useNavigate();\n  \n  // Use the useEffect hook to fetch user profile data when the component mounts or updates\n  useEffect(() => {\n    const authtoken = sessionStorage.getItem(\"auth-token\");\n    if (!authtoken) {\n      navigate(\"/login\");\n    } else {\n      fetchUserProfile();\n    }\n  }, [navigate]);\n\n  // Function to fetch user profile data from the API\n  const fetchUserProfile = async () => {\n    try {\n      const authtoken = sessionStorage.getItem(\"auth-token\");\n      const email = sessionStorage.getItem(\"email\");\n\n      if (!authtoken) {\n        navigate(\"/login\");\n      } else {\n        const response = await fetch(`${API_URL}/api/auth/user`, {\n          headers: {\n            \"Authorization\": `Bearer ${authtoken}`,\n            \"Email\": email,\n          },\n        });\n        if (response.ok) {\n          const user = await response.json();\n          setUserDetails(user);\n          setUpdatedDetails(user);\n        } else {\n          throw new Error(\"Failed to fetch user profile\");\n        }\n      }\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  // Function to enable edit mode for profile details\n  const handleEdit = () => {\n    setEditMode(true);\n  };\n\n  // Function to update state when user inputs new data\n  const handleInputChange = (e) => {\n    setUpdatedDetails({\n      ...updatedDetails,\n      [e.target.name]: e.target.value,\n    });\n  };\n\n  // Function to handle form submission when user saves changes\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n\n    try {\n      const authtoken = sessionStorage.getItem(\"auth-token\");\n      const email = sessionStorage.getItem(\"email\");\n\n      if (!authtoken || !email) {\n        navigate(\"/login\");\n        return;\n      }\n\n      const payload = { ...updatedDetails };\n      const response = await fetch(`${API_URL}/api/auth/user`, {\n        method: \"PUT\",\n        headers: {\n          \"Authorization\": `Bearer ${authtoken}`,\n          \"Content-Type\": \"application/json\",\n          \"Email\": email,\n        },\n        body: JSON.stringify(payload),\n      });\n\n      if (response.ok) {\n        sessionStorage.setItem(\"name\", updatedDetails.name);\n        sessionStorage.setItem(\"phone\", updatedDetails.phone);\n\n        setUserDetails(updatedDetails);\n        setEditMode(false);\n        alert(`Profile Updated Successfully!`);\n        navigate(\"/\");\n      } else {\n        throw new Error(\"Failed to update profile\");\n      }\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  // Render the profile form with different sections based on edit mode\n  return (\n    <div className=\"profile-container\">\n      {editMode ? (\n        <form onSubmit={handleSubmit}>\n          <label>\n            Email\n            <input\n              type=\"email\"\n              name=\"email\"\n              value={updatedDetails.email}\n              disabled\n            />\n          </label>\n          <label>\n            Name\n            <input\n              type=\"text\"\n              name=\"name\"\n              value={updatedDetails.name}\n              onChange={handleInputChange}\n            />\n          </label>\n          <label>\n            Phone\n            <input\n              type=\"text\"\n              name=\"phone\"\n              value={updatedDetails.phone}\n              onChange={handleInputChange}\n            />\n          </label>\n          <button type=\"submit\">Save</button>\n        </form>\n      ) : (\n        <div className=\"profile-details\">\n          <h1>Welcome, {userDetails.name}</h1>\n          <p><b>Email:</b> {userDetails.email}</p>\n          <p><b>Phone:</b> {userDetails.phone}</p>\n          <button onClick={handleEdit}>Edit</button>\n        </div>\n      )}\n    </div>\n  );\n};\n\n// Export the ProfileForm component as the default export\nexport default ProfileForm;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}