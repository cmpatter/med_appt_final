{"ast":null,"code":"// src/Components/Notification/Notification.js\nimport React,{useEffect,useState}from'react';import'./Notification.css';// Import CSS for Notification styling\nimport{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const Notification=()=>{const[isNotificationVisible,setIsNotificationVisible]=useState(true);// State to control visibility of notification\nconst[appointmentData,setAppointmentData]=useState(null);useEffect(()=>{// Fetch appointment data from localStorage\nconst storedAppointmentData=JSON.parse(localStorage.getItem('appointmentData'));// Set appointment data if it exists\nif(storedAppointmentData){setAppointmentData(storedAppointmentData);}},[]);// Handler to remove notification when appointment is canceled\nconst handleCancelAppointment=()=>{// Remove appointment data from localStorage\nlocalStorage.removeItem('appointmentData');// Hide the notification\nsetIsNotificationVisible(false);};// Show notification only if there's appointment data and the notification should be visible\nif(!isNotificationVisible||!appointmentData)return null;return/*#__PURE__*/_jsx(\"div\",{className:\"notification-container\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"notification-content\",children:[/*#__PURE__*/_jsx(\"h3\",{className:\"notification-title\",children:\"Appointment Notification\"}),/*#__PURE__*/_jsxs(\"p\",{className:\"notification-message\",children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Patient:\"}),\" \",appointmentData.username,\" \",/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"strong\",{children:\"Doctor:\"}),\" \",appointmentData.doctorName,\" \",/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"strong\",{children:\"Date:\"}),\" \",appointmentData.date,\" \",/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"strong\",{children:\"Time:\"}),\" \",appointmentData.time]}),/*#__PURE__*/_jsx(\"button\",{className:\"notification-button\",onClick:handleCancelAppointment,children:\"Cancel Appointment\"})]})});};export default Notification;","map":{"version":3,"names":["React","useEffect","useState","jsx","_jsx","jsxs","_jsxs","Notification","isNotificationVisible","setIsNotificationVisible","appointmentData","setAppointmentData","storedAppointmentData","JSON","parse","localStorage","getItem","handleCancelAppointment","removeItem","className","children","username","doctorName","date","time","onClick"],"sources":["/home/project/med_app/src/Components/Notification/Notification.js"],"sourcesContent":["// src/Components/Notification/Notification.js\nimport React, { useEffect, useState } from 'react';\nimport './Notification.css'; // Import CSS for Notification styling\n\nconst Notification = () => {\n  const [isNotificationVisible, setIsNotificationVisible] = useState(true); // State to control visibility of notification\n  const [appointmentData, setAppointmentData] = useState(null);\n\n  useEffect(() => {\n    // Fetch appointment data from localStorage\n    const storedAppointmentData = JSON.parse(localStorage.getItem('appointmentData'));\n    \n    // Set appointment data if it exists\n    if (storedAppointmentData) {\n      setAppointmentData(storedAppointmentData);\n    }\n  }, []);\n\n  // Handler to remove notification when appointment is canceled\n  const handleCancelAppointment = () => {\n    // Remove appointment data from localStorage\n    localStorage.removeItem('appointmentData');\n    // Hide the notification\n    setIsNotificationVisible(false);\n  };\n\n  // Show notification only if there's appointment data and the notification should be visible\n  if (!isNotificationVisible || !appointmentData) return null;\n\n  return (\n    <div className=\"notification-container\">\n      <div className=\"notification-content\">\n        <h3 className=\"notification-title\">Appointment Notification</h3>\n        <p className=\"notification-message\">\n          <strong>Patient:</strong> {appointmentData.username} <br />\n          <strong>Doctor:</strong> {appointmentData.doctorName} <br />\n          <strong>Date:</strong> {appointmentData.date} <br />\n          <strong>Time:</strong> {appointmentData.time}\n        </p>\n        <button className=\"notification-button\" onClick={handleCancelAppointment}>\n          Cancel Appointment\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default Notification;\n"],"mappings":"AAAA;AACA,MAAO,CAAAA,KAAK,EAAIC,SAAS,CAAEC,QAAQ,KAAQ,OAAO,CAClD,MAAO,oBAAoB,CAAE;AAAA,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAE7B,KAAM,CAAAC,YAAY,CAAGA,CAAA,GAAM,CACzB,KAAM,CAACC,qBAAqB,CAAEC,wBAAwB,CAAC,CAAGP,QAAQ,CAAC,IAAI,CAAC,CAAE;AAC1E,KAAM,CAACQ,eAAe,CAAEC,kBAAkB,CAAC,CAAGT,QAAQ,CAAC,IAAI,CAAC,CAE5DD,SAAS,CAAC,IAAM,CACd;AACA,KAAM,CAAAW,qBAAqB,CAAGC,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,iBAAiB,CAAC,CAAC,CAEjF;AACA,GAAIJ,qBAAqB,CAAE,CACzBD,kBAAkB,CAACC,qBAAqB,CAAC,CAC3C,CACF,CAAC,CAAE,EAAE,CAAC,CAEN;AACA,KAAM,CAAAK,uBAAuB,CAAGA,CAAA,GAAM,CACpC;AACAF,YAAY,CAACG,UAAU,CAAC,iBAAiB,CAAC,CAC1C;AACAT,wBAAwB,CAAC,KAAK,CAAC,CACjC,CAAC,CAED;AACA,GAAI,CAACD,qBAAqB,EAAI,CAACE,eAAe,CAAE,MAAO,KAAI,CAE3D,mBACEN,IAAA,QAAKe,SAAS,CAAC,wBAAwB,CAAAC,QAAA,cACrCd,KAAA,QAAKa,SAAS,CAAC,sBAAsB,CAAAC,QAAA,eACnChB,IAAA,OAAIe,SAAS,CAAC,oBAAoB,CAAAC,QAAA,CAAC,0BAAwB,CAAI,CAAC,cAChEd,KAAA,MAAGa,SAAS,CAAC,sBAAsB,CAAAC,QAAA,eACjChB,IAAA,WAAAgB,QAAA,CAAQ,UAAQ,CAAQ,CAAC,IAAC,CAACV,eAAe,CAACW,QAAQ,CAAC,GAAC,cAAAjB,IAAA,QAAK,CAAC,cAC3DA,IAAA,WAAAgB,QAAA,CAAQ,SAAO,CAAQ,CAAC,IAAC,CAACV,eAAe,CAACY,UAAU,CAAC,GAAC,cAAAlB,IAAA,QAAK,CAAC,cAC5DA,IAAA,WAAAgB,QAAA,CAAQ,OAAK,CAAQ,CAAC,IAAC,CAACV,eAAe,CAACa,IAAI,CAAC,GAAC,cAAAnB,IAAA,QAAK,CAAC,cACpDA,IAAA,WAAAgB,QAAA,CAAQ,OAAK,CAAQ,CAAC,IAAC,CAACV,eAAe,CAACc,IAAI,EAC3C,CAAC,cACJpB,IAAA,WAAQe,SAAS,CAAC,qBAAqB,CAACM,OAAO,CAAER,uBAAwB,CAAAG,QAAA,CAAC,oBAE1E,CAAQ,CAAC,EACN,CAAC,CACH,CAAC,CAEV,CAAC,CAED,cAAe,CAAAb,YAAY","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}