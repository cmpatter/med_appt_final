{"ast":null,"code":"var _jsxFileName = \"/home/project/med_app/src/App.js\",\n  _s = $RefreshSig$();\nimport './App.css';\nimport Navbar from './Components/Navbar/Navbar';\nimport React, { useState, useEffect } from 'react';\nimport SignUp from './Components/Sign_Up/Sign_Up';\nimport Login from './Components/Login/Login';\nimport FindDoctorSearch from './Components/FindDoctorSearch/FindDoctorSearch';\nimport InstantConsultation from './Components/InstantConsultationBooking/InstantConsultation';\nimport DoctorCard from './Components/DoctorCard/DoctorCard';\nimport Notification from './Components/Notification/Notification';\nimport ReviewForm from './Components/ReviewForm/ReviewForm';\nimport ProfileForm from './Components/ProfileForm/ProfileForm'; // Correct import path for ProfileForm\n\nimport { BrowserRouter as Router, Route, Routes } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const [userDetails, setUserDetails] = useState({\n    username: '',\n    email: ''\n  });\n  const [notificationMessage, setNotificationMessage] = useState('');\n  const [showNotification, setShowNotification] = useState(false);\n  useEffect(() => {\n    const storedEmail = sessionStorage.getItem(\"email\");\n    const storedUsername = sessionStorage.getItem(\"username\");\n    if (storedEmail && storedUsername) {\n      setIsLoggedIn(true);\n      setUserDetails({\n        username: storedUsername,\n        email: storedEmail\n      });\n    }\n  }, []);\n  const handleBooking = () => {\n    setNotificationMessage('Your appointment has been booked successfully!');\n    setShowNotification(true);\n  };\n  const handleCancelBooking = () => {\n    setNotificationMessage('Your appointment has been canceled.');\n    setShowNotification(true);\n  };\n  const handleProfileUpdate = updatedDetails => {\n    setUserDetails(updatedDetails);\n    sessionStorage.setItem(\"username\", updatedDetails.username);\n    sessionStorage.setItem(\"email\", updatedDetails.email);\n  };\n  const doctors = [{\n    name: 'Dr. James Brown',\n    speciality: 'Cardiologist',\n    experience: 10,\n    ratings: 4.5,\n    profilePic: null\n  }, {\n    name: 'Dr. Jameson Daniels',\n    speciality: 'Neurologist',\n    experience: 8,\n    ratings: 4.7,\n    profilePic: null\n  }, {\n    name: 'Dr. Sam Brown',\n    speciality: 'Pediatrician',\n    experience: 15,\n    ratings: 4.8,\n    profilePic: null\n  }];\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Navbar, {\n        isLoggedIn: isLoggedIn,\n        username: userDetails.username,\n        setIsLoggedIn: setIsLoggedIn,\n        setUserDetails: setUserDetails\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Notification, {\n        message: notificationMessage,\n        visible: showNotification,\n        onClose: () => setShowNotification(false)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Routes, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          path: \"/Sign_Up\",\n          element: /*#__PURE__*/_jsxDEV(SignUp, {\n            setIsLoggedIn: setIsLoggedIn,\n            setUserDetails: setUserDetails\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 43\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/Login\",\n          element: /*#__PURE__*/_jsxDEV(Login, {\n            setIsLoggedIn: setIsLoggedIn,\n            setUserDetails: setUserDetails\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 41\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/find-doctor\",\n          element: /*#__PURE__*/_jsxDEV(FindDoctorSearch, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 47\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/instant-consultation\",\n          element: /*#__PURE__*/_jsxDEV(InstantConsultation, {\n            onBooking: handleBooking,\n            onCancel: handleCancelBooking\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 56\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/reviews\",\n          element: /*#__PURE__*/_jsxDEV(ReviewForm, {\n            doctorName: \"James Brown\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 43\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/profile\",\n          element: /*#__PURE__*/_jsxDEV(ProfileForm, {\n            userDetails: userDetails,\n            onProfileUpdate: handleProfileUpdate\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 43\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this), \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"doctor-cards-container\",\n        children: doctors.map((doctor, index) => /*#__PURE__*/_jsxDEV(DoctorCard, {\n          name: doctor.name,\n          speciality: doctor.speciality,\n          experience: doctor.experience,\n          ratings: doctor.ratings,\n          profilePic: doctor.profilePic\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"I8EFaJC5c6kkk4fc1ofEHvrGF30=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["Navbar","React","useState","useEffect","SignUp","Login","FindDoctorSearch","InstantConsultation","DoctorCard","Notification","ReviewForm","ProfileForm","BrowserRouter","Router","Route","Routes","jsxDEV","_jsxDEV","App","_s","isLoggedIn","setIsLoggedIn","userDetails","setUserDetails","username","email","notificationMessage","setNotificationMessage","showNotification","setShowNotification","storedEmail","sessionStorage","getItem","storedUsername","handleBooking","handleCancelBooking","handleProfileUpdate","updatedDetails","setItem","doctors","name","speciality","experience","ratings","profilePic","children","fileName","_jsxFileName","lineNumber","columnNumber","message","visible","onClose","path","element","onBooking","onCancel","doctorName","onProfileUpdate","className","map","doctor","index","_c","$RefreshReg$"],"sources":["/home/project/med_app/src/App.js"],"sourcesContent":["import './App.css';\nimport Navbar from './Components/Navbar/Navbar';\nimport React, { useState, useEffect } from 'react';\nimport SignUp from './Components/Sign_Up/Sign_Up';\nimport Login from './Components/Login/Login';\nimport FindDoctorSearch from './Components/FindDoctorSearch/FindDoctorSearch';\nimport InstantConsultation from './Components/InstantConsultationBooking/InstantConsultation';\nimport DoctorCard from './Components/DoctorCard/DoctorCard';\nimport Notification from './Components/Notification/Notification';\nimport ReviewForm from './Components/ReviewForm/ReviewForm';\nimport ProfileForm from './Components/ProfileForm/ProfileForm'; // Correct import path for ProfileForm\n\nimport { BrowserRouter as Router, Route, Routes } from \"react-router-dom\";\n\nfunction App() {\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const [userDetails, setUserDetails] = useState({\n    username: '',\n    email: '',\n  });\n  const [notificationMessage, setNotificationMessage] = useState('');\n  const [showNotification, setShowNotification] = useState(false);\n\n  useEffect(() => {\n    const storedEmail = sessionStorage.getItem(\"email\");\n    const storedUsername = sessionStorage.getItem(\"username\");\n\n    if (storedEmail && storedUsername) {\n      setIsLoggedIn(true);\n      setUserDetails({ username: storedUsername, email: storedEmail });\n    }\n  }, []);\n\n  const handleBooking = () => {\n    setNotificationMessage('Your appointment has been booked successfully!');\n    setShowNotification(true);\n  };\n\n  const handleCancelBooking = () => {\n    setNotificationMessage('Your appointment has been canceled.');\n    setShowNotification(true);\n  };\n\n  const handleProfileUpdate = (updatedDetails) => {\n    setUserDetails(updatedDetails);\n    sessionStorage.setItem(\"username\", updatedDetails.username);\n    sessionStorage.setItem(\"email\", updatedDetails.email);\n  };\n\n  const doctors = [\n    { name: 'Dr. James Brown', speciality: 'Cardiologist', experience: 10, ratings: 4.5, profilePic: null },\n    { name: 'Dr. Jameson Daniels', speciality: 'Neurologist', experience: 8, ratings: 4.7, profilePic: null },\n    { name: 'Dr. Sam Brown', speciality: 'Pediatrician', experience: 15, ratings: 4.8, profilePic: null },\n  ];\n\n  return (\n    <Router>\n      <div>\n        <Navbar isLoggedIn={isLoggedIn} username={userDetails.username} setIsLoggedIn={setIsLoggedIn} setUserDetails={setUserDetails} />\n\n        <Notification \n          message={notificationMessage} \n          visible={showNotification} \n          onClose={() => setShowNotification(false)} \n        />\n\n        <Routes>\n          <Route path=\"/Sign_Up\" element={<SignUp setIsLoggedIn={setIsLoggedIn} setUserDetails={setUserDetails} />} />\n          <Route path=\"/Login\" element={<Login setIsLoggedIn={setIsLoggedIn} setUserDetails={setUserDetails} />} />\n          <Route path=\"/find-doctor\" element={<FindDoctorSearch />} />\n          <Route path=\"/instant-consultation\" element={<InstantConsultation onBooking={handleBooking} onCancel={handleCancelBooking} />} />\n          <Route path=\"/reviews\" element={<ReviewForm doctorName=\"James Brown\" />} />\n          <Route path=\"/profile\" element={<ProfileForm userDetails={userDetails} onProfileUpdate={handleProfileUpdate} />} /> {/* Pass userDetails and handler */}\n        </Routes>\n\n        <div className=\"doctor-cards-container\">\n          {doctors.map((doctor, index) => (\n            <DoctorCard\n              key={index}\n              name={doctor.name}\n              speciality={doctor.speciality}\n              experience={doctor.experience}\n              ratings={doctor.ratings}\n              profilePic={doctor.profilePic}\n            />\n          ))}\n        </div>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}