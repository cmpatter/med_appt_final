{"ast":null,"code":"var _jsxFileName = \"/home/project/med_app/src/App.js\",\n  _s = $RefreshSig$();\nimport './App.css';\nimport Navbar from './Components/Navbar/Navbar';\nimport React, { useState, useEffect } from 'react';\nimport SignUp from './Components/Sign_Up/Sign_Up';\nimport Login from './Components/Login/Login';\nimport FindDoctorSearch from './Components/FindDoctorSearch/FindDoctorSearch';\nimport InstantConsultation from './Components/InstantConsultationBooking/InstantConsultation';\nimport DoctorCard from './Components/DoctorCard/DoctorCard';\nimport Notification from './Components/Notification/Notification';\nimport ReviewForm from './Components/ReviewForm/ReviewForm'; // Import ReviewForm\n\nimport { BrowserRouter as Router, Route, Routes } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const [username, setUsername] = useState('');\n  const [notificationMessage, setNotificationMessage] = useState('');\n  const [showNotification, setShowNotification] = useState(false);\n  useEffect(() => {\n    const storedEmail = sessionStorage.getItem(\"email\");\n    const storedUsername = sessionStorage.getItem(\"username\");\n    if (storedEmail && storedUsername) {\n      setIsLoggedIn(true);\n      setUsername(storedUsername);\n    }\n  }, []);\n  const handleBooking = () => {\n    setNotificationMessage('Your appointment has been booked successfully!');\n    setShowNotification(true);\n  };\n  const handleCancelBooking = () => {\n    setNotificationMessage('Your appointment has been canceled.');\n    setShowNotification(true);\n  };\n  const doctors = [{\n    name: 'Dr. James Brown',\n    speciality: 'Cardiologist',\n    experience: 10,\n    ratings: 4.5,\n    profilePic: null\n  }, {\n    name: 'Dr. Jameson Daniels',\n    speciality: 'Neurologist',\n    experience: 8,\n    ratings: 4.7,\n    profilePic: null\n  }, {\n    name: 'Dr. Sam Brown',\n    speciality: 'Pediatrician',\n    experience: 15,\n    ratings: 4.8,\n    profilePic: null\n  }];\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Navbar, {\n        isLoggedIn: isLoggedIn,\n        username: username,\n        setIsLoggedIn: setIsLoggedIn,\n        setUsername: setUsername\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Notification, {\n        message: notificationMessage,\n        visible: showNotification,\n        onClose: () => setShowNotification(false)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Routes, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          path: \"/Sign_Up\",\n          element: /*#__PURE__*/_jsxDEV(SignUp, {\n            setIsLoggedIn: setIsLoggedIn,\n            setUsername: setUsername\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 43\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/Login\",\n          element: /*#__PURE__*/_jsxDEV(Login, {\n            setIsLoggedIn: setIsLoggedIn,\n            setUsername: setUsername\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 41\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/find-doctor\",\n          element: /*#__PURE__*/_jsxDEV(FindDoctorSearch, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 47\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/instant-consultation\",\n          element: /*#__PURE__*/_jsxDEV(InstantConsultation, {\n            onBooking: handleBooking,\n            onCancel: handleCancelBooking\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 56\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/reviews\",\n          element: /*#__PURE__*/_jsxDEV(ReviewForm, {\n            doctorName: \"James Brown\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 22\n          }, this) // Pass doctorName prop as needed\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"doctor-cards-container\",\n        children: doctors.map((doctor, index) => /*#__PURE__*/_jsxDEV(DoctorCard, {\n          name: doctor.name,\n          speciality: doctor.speciality,\n          experience: doctor.experience,\n          ratings: doctor.ratings,\n          profilePic: doctor.profilePic\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"5snrrQgo6TOfNNMpijsxXrclzZo=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["Navbar","React","useState","useEffect","SignUp","Login","FindDoctorSearch","InstantConsultation","DoctorCard","Notification","ReviewForm","BrowserRouter","Router","Route","Routes","jsxDEV","_jsxDEV","App","_s","isLoggedIn","setIsLoggedIn","username","setUsername","notificationMessage","setNotificationMessage","showNotification","setShowNotification","storedEmail","sessionStorage","getItem","storedUsername","handleBooking","handleCancelBooking","doctors","name","speciality","experience","ratings","profilePic","children","fileName","_jsxFileName","lineNumber","columnNumber","message","visible","onClose","path","element","onBooking","onCancel","doctorName","className","map","doctor","index","_c","$RefreshReg$"],"sources":["/home/project/med_app/src/App.js"],"sourcesContent":["import './App.css';\nimport Navbar from './Components/Navbar/Navbar';\nimport React, { useState, useEffect } from 'react';\nimport SignUp from './Components/Sign_Up/Sign_Up';\nimport Login from './Components/Login/Login';\nimport FindDoctorSearch from './Components/FindDoctorSearch/FindDoctorSearch';\nimport InstantConsultation from './Components/InstantConsultationBooking/InstantConsultation';\nimport DoctorCard from './Components/DoctorCard/DoctorCard';\nimport Notification from './Components/Notification/Notification';\nimport ReviewForm from './Components/ReviewForm/ReviewForm'; // Import ReviewForm\n\nimport { BrowserRouter as Router, Route, Routes } from \"react-router-dom\";\n\nfunction App() {\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const [username, setUsername] = useState('');\n  const [notificationMessage, setNotificationMessage] = useState('');\n  const [showNotification, setShowNotification] = useState(false);\n\n  useEffect(() => {\n    const storedEmail = sessionStorage.getItem(\"email\");\n    const storedUsername = sessionStorage.getItem(\"username\");\n\n    if (storedEmail && storedUsername) {\n      setIsLoggedIn(true);\n      setUsername(storedUsername);\n    }\n  }, []);\n\n  const handleBooking = () => {\n    setNotificationMessage('Your appointment has been booked successfully!');\n    setShowNotification(true);\n  };\n\n  const handleCancelBooking = () => {\n    setNotificationMessage('Your appointment has been canceled.');\n    setShowNotification(true);\n  };\n\n  const doctors = [\n    { name: 'Dr. James Brown', speciality: 'Cardiologist', experience: 10, ratings: 4.5, profilePic: null },\n    { name: 'Dr. Jameson Daniels', speciality: 'Neurologist', experience: 8, ratings: 4.7, profilePic: null },\n    { name: 'Dr. Sam Brown', speciality: 'Pediatrician', experience: 15, ratings: 4.8, profilePic: null },\n  ];\n\n  return (\n    <Router>\n      <div>\n        <Navbar isLoggedIn={isLoggedIn} username={username} setIsLoggedIn={setIsLoggedIn} setUsername={setUsername} />\n\n        <Notification \n          message={notificationMessage} \n          visible={showNotification} \n          onClose={() => setShowNotification(false)} \n        />\n\n        <Routes>\n          <Route path=\"/Sign_Up\" element={<SignUp setIsLoggedIn={setIsLoggedIn} setUsername={setUsername} />} />\n          <Route path=\"/Login\" element={<Login setIsLoggedIn={setIsLoggedIn} setUsername={setUsername} />} />\n          <Route path=\"/find-doctor\" element={<FindDoctorSearch />} />\n          <Route path=\"/instant-consultation\" element={<InstantConsultation onBooking={handleBooking} onCancel={handleCancelBooking} />} />\n          \n          {/* Render the ReviewForm component */}\n          <Route \n            path=\"/reviews\" \n            element={<ReviewForm doctorName=\"James Brown\" />} // Pass doctorName prop as needed\n          />\n        </Routes>\n\n        <div className=\"doctor-cards-container\">\n          {doctors.map((doctor, index) => (\n            <DoctorCard\n              key={index}\n              name={doctor.name}\n              speciality={doctor.speciality}\n              experience={doctor.experience}\n              ratings={doctor.ratings}\n              profilePic={doctor.profilePic}\n            />\n          ))}\n        </div>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}